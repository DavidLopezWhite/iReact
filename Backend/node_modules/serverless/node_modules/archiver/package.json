{
  "_args": [
    [
      {
        "raw": "archiver@https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
        "scope": null,
        "escapedName": "archiver",
        "name": "archiver",
        "rawSpec": "https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
        "spec": "https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
        "type": "remote"
      },
      "/home/harold/Projects/Reactathon/iReact/Backend/node_modules/serverless"
    ]
  ],
  "_from": "archiver@>=1.1.0 <2.0.0",
  "_id": "archiver@1.2.0",
  "_inCache": true,
  "_location": "/serverless/archiver",
  "_phantomChildren": {
    "lodash": "4.17.2"
  },
  "_requested": {
    "raw": "archiver@https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
    "scope": null,
    "escapedName": "archiver",
    "name": "archiver",
    "rawSpec": "https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
    "spec": "https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/serverless"
  ],
  "_resolved": "https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
  "_shasum": "fb5c6af5443b3fa6a426344753bad2a7b444aadd",
  "_shrinkwrap": null,
  "_spec": "archiver@https://registry.npmjs.org/archiver/-/archiver-1.2.0.tgz",
  "_where": "/home/harold/Projects/Reactathon/iReact/Backend/node_modules/serverless",
  "author": {
    "name": "Chris Talkington",
    "url": "http://christalkington.com/"
  },
  "bugs": {
    "url": "https://github.com/archiverjs/node-archiver/issues"
  },
  "dependencies": {
    "archiver-utils": "^1.3.0",
    "async": "^2.0.0",
    "buffer-crc32": "^0.2.1",
    "glob": "^7.0.0",
    "lodash": "^4.8.0",
    "readable-stream": "^2.0.0",
    "tar-stream": "^1.5.0",
    "zip-stream": "^1.1.0"
  },
  "description": "a streaming interface for archive generation",
  "devDependencies": {
    "archiver-jsdoc-theme": "^1.0.0",
    "chai": "^3.4.0",
    "jsdoc": "~3.4.0",
    "mkdirp": "^0.5.0",
    "mocha": "^2.3.3",
    "rimraf": "^2.4.2",
    "stream-bench": "^0.1.2",
    "tar": "^2.2.1",
    "yauzl": "^2.3.1"
  },
  "engines": {
    "node": ">= 0.10.0"
  },
  "files": [
    "index.js",
    "lib"
  ],
  "homepage": "https://github.com/archiverjs/node-archiver",
  "keywords": [
    "archive",
    "archiver",
    "stream",
    "zip",
    "tar"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "archiver",
  "optionalDependencies": {},
  "publishConfig": {
    "registry": "https://registry.npmjs.org/"
  },
  "readme": "# Archiver v1.2.0\r\n\r\n[![Build Status](https://travis-ci.org/archiverjs/node-archiver.svg?branch=master)](https://travis-ci.org/archiverjs/node-archiver) [![Build status](https://ci.appveyor.com/api/projects/status/38kqu3yp159nodxe/branch/master?svg=true)](https://ci.appveyor.com/project/ctalkington/node-archiver/branch/master)\r\n\r\na streaming interface for archive generation\r\n\r\nVisit the [API documentation](http://archiverjs.com/docs) for a list of all methods available.\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install archiver --save\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nvar archiver = require('archiver');\r\nvar archive = archiver.create('zip', {}); // or archiver('zip', {});\r\n```\r\n\r\n## Formats\r\n\r\nArchiver ships with out of the box support for TAR and ZIP archives.\r\n\r\nYou can register additional formats with `registerFormat`.\r\n\r\n_Formats will be changing in the next few releases to implement a middleware approach._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/archiverjs/node-archiver.git"
  },
  "scripts": {
    "bench": "node benchmark/simple/pack-zip.js",
    "jsdoc": "jsdoc -c jsdoc.json README.md",
    "test": "mocha --reporter dot"
  },
  "version": "1.2.0"
}
